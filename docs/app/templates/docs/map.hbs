<div class="row">
  <div class="col-lg-7 order-2 order-lg-1">
    <section>
      <h5 id="creating-a-map">Creating a map</h5>

      <p>Creating a map is straightforward. The only required arguments are the coordinates for
      the center.</p>

      <CodeSnippet @name="basic-map.hbs" />

      <p>To get the map to render, the map canvas needs to be styled with dimensions. For example, in your <var>app.css</var>:</p>

      <CodeSnippet @name="map-canvas-style.css" />

      <p>Most of the components in this addon accept <var>lat</var> and <var>lng</var> parameters for
      convenience and consistency. This lets you avoid the hassle of remembering whether to use <var>position</var> or <var>center</var> and lets you provide the coordinates separately, as that’s how you are likely storing them if you’re using Ember Data. We don’t assert the usage of <var>lat</var> and <var>lng</var>, so you can still use the native Google options if you wish.</p>

      <p>The <var>g-map</var> component accepts all of the <GoogleDocs @section="map#MapOptions">MapOptions</GoogleDocs> options you would pass to a Google Map instance. These are automatically watched for changes.</p>

      <CodeSnippet @name="map-passing-options.hbs" />

      <p>You can also pass an <var>options</var> object, but note that <b>it will not be watched for changes</b>. You can use the <var>g-map/hash</var> helper instead if you need the options to be watched.</p>
    </section>
    <section>
      <h5 id="map-instance">Accessing the map instance</h5>

      <p>If you need access the map instance – to call <var>panTo</var> for example – you can use the <var>onceOnIdle</var> hook. It will return the map instance once the map has been initialised.</p>
    </section>

    <LinkToNext @nextPage={{this.nextPage}} />
  </div>
  <div class="col-lg-5 order-1 order-lg-2 sticky-top sticky-map">
    <GMap
      @lat={{this.lat}}
      @lng={{this.lng}}
      @zoom={{12}}
      @styles={{this.primaryMapStyle}}
      @minZoom={{10}}
      @panControl={{false}}
      @streetViewControl={{false}}
      class="ember-google-map-responsive" />
  </div>
</div>