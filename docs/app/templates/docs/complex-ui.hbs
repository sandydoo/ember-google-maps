<div class="col-text">
  <section>
    <h5>Building a rentals website</h5>
    <p>It’s time to show what we can accomplish with these tools! It seems like the most popular examples are Airbnb-like interfaces – a list of data on one side and a map visualising it on the other side. Heck, even the <span class="ember">ember</span> guides create a rentals website! This example showcases a large chunk of the power of this addon and how it can positively affect a developer’s productivity and the quality of the their code.</p>

    <p>Keep in mind this is just a visual example. Let’s simulate fetching a geo-bound AJAX query from a BE server by filtering an array of random locations as you pan the map. Let’s also attach some mouseover effects!</p>

    <DocTip>
      You might want to view this demo on a device with a larger screen.
    </DocTip>

    <LinkTo @route="examples.sweet-rentals" class="btn btn-primary">View rentals example ›</LinkTo>
  </section>
  <section>
    <h5 class="mt-4">Breakdown of the demo</h5>

    <p>Let’s quickly discuss what is happening in the demo. You can view the code for the entire demo in the repo, but most of the work is happening in the template.
      <ol>
        <li>We set the center of the map and the zoom level in the first line.</li>
        <li>We then set a bunch of map options: we modify the look of the map tiles with <var>styles</var>, disable the scroll wheel to force the feed to scroll down instead, and mess around with the map controls to achieve a minimalist look.</li>
        <li>We use <var>onceOnIdle</var> and <var>onBoundsChanged</var> events to fetch the current map bounds. We use these bounds to filter the random array of markers on the map. This filtered array is called <var>boundedLondonLocations</var>. This simulates loading external data when panning or zooming the map.</li>
        <li>We use the <var>{{"{{each}}"}}</var> helper to loop over the locations and display an <var>overlay</var> with custom content at the given location coordinates. Inside the overlay, we render a custom, styled tooltip <var>div</var>, containing the price of the rental.</li>
        <li>The <var>onMouseover</var> and <var>onMouseleave</var> events modify the <var>active</var> property on the rental, which lets us animate the tooltip and the card in the feed. Finally, the <var>onClick</var> event receives the clicked rental and scrolls to its card in the feed.</li>
      </ol>
    </p>

    <CodeSnippet @name="sweet-rentals-map.hbs" />
  </section>

  <p>{{this.nextPage.text}}</p>

  <LinkToNext @nextPage={{this.nextPage}} />
</div>